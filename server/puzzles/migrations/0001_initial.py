# Generated by Django 3.1.7 on 2022-02-13 19:44

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import puzzles.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BadEmailAddress',
            fields=[
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False)),
                ('reason', models.CharField(choices=[('UNS', 'Unsubscribed'), ('BOU', 'Bounced')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_content', models.BinaryField(blank=True)),
                ('subject', models.TextField(blank=True)),
                ('text_content', models.TextField(blank=True)),
                ('header_content', models.BinaryField(blank=True)),
                ('has_attachments', models.BooleanField(default=False)),
                ('message_id', models.TextField(blank=True, db_index=True)),
                ('in_reply_to_id', models.TextField(blank=True, db_index=True)),
                ('root_reference_id', models.TextField(blank=True, db_index=True)),
                ('reference_ids', models.JSONField(blank=True, default=list)),
                ('from_address', models.TextField(blank=True)),
                ('to_addresses', models.JSONField(blank=True, default=list)),
                ('cc_addresses', models.JSONField(blank=True, default=list)),
                ('sent_datetime', models.DateTimeField(blank=True, null=True)),
                ('is_spam', models.BooleanField(default=False)),
                ('is_authenticated', models.BooleanField(default=False)),
                ('bcc_addresses', models.JSONField(blank=True, default=list)),
                ('attempted_send_datetime', models.DateTimeField(blank=True, null=True)),
                ('received_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('uidvalidity', models.IntegerField(blank=True, null=True)),
                ('uid', models.IntegerField(blank=True, null=True)),
                ('modseq', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('SOUT', 'Sending'), ('SENT', 'Sent'), ('RNR', 'Received - No reply'), ('RANS', 'Received - Answered'), ('RNRR', 'Received - No reply required'), ('RH', 'Received - Hint'), ('RB', 'Received - Bounce'), ('RUNS', 'Received - Unsubscribe'), ('RSUB', 'Received - Resubscribe'), ('DRFT', 'Draft')], max_length=4)),
                ('is_from_us', models.BooleanField()),
                ('created_via_webapp', models.BooleanField()),
                ('scheduled_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('opened', models.BooleanField(default=False)),
                ('claimed_datetime', models.DateTimeField(blank=True, null=True)),
                ('claimer', models.CharField(blank=True, default='', max_length=255)),
                ('response', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='request_set', to='puzzles.email')),
            ],
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.TextField(blank=True)),
                ('text_content', models.TextField(blank=True)),
                ('html_content', models.TextField(blank=True)),
                ('from_address', models.TextField()),
                ('scheduled_datetime', models.DateTimeField()),
                ('status', models.CharField(choices=[('SCHD', 'Scheduled'), ('SOUT', 'Sending'), ('SENT', 'Sent'), ('DRFT', 'Draft'), ('CANC', 'Cancelled')], default='DRFT', max_length=4)),
                ('recipients', models.CharField(choices=[('BU', 'batch_all_users'), ('TE', 'all_teams'), ('US', 'all_users'), ('AD', 'batch_addresses')], max_length=2)),
                ('addresses', models.JSONField(blank=True, default=list)),
                ('batch_size', models.IntegerField(default=50)),
                ('batch_delay_ms', models.IntegerField(default=100)),
                ('last_user_pk', models.IntegerField(default=-1)),
                ('last_team_pk', models.IntegerField(default=-1)),
                ('last_address_index', models.IntegerField(default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='Puzzle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('slug', models.SlugField(max_length=500, unique=True)),
                ('answer', models.CharField(max_length=500)),
                ('deep', models.IntegerField(verbose_name='DEEP threshold')),
                ('metameta_deep', models.IntegerField(default=0, verbose_name='Metameta DEEP threshold')),
                ('is_meta', models.BooleanField(default=False)),
                ('unsolved_icon', models.ImageField(blank=True, max_length=300, upload_to=puzzles.models.Puzzle.create_icon_filename)),
                ('solved_icon', models.ImageField(blank=True, max_length=300, upload_to=puzzles.models.Puzzle.create_icon_filename)),
                ('main_unsolved_icon', models.ImageField(blank=True, max_length=300, upload_to=puzzles.models.Puzzle.create_icon_filename)),
                ('bg_icon', models.FileField(blank=True, max_length=300, upload_to=puzzles.models.Puzzle.create_icon_filename, validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg', 'svg'])])),
                ('icon_x', models.IntegerField(default=0)),
                ('icon_y', models.IntegerField(default=0)),
                ('icon_size', models.IntegerField(default=0)),
                ('text_x', models.IntegerField(default=0)),
                ('text_y', models.IntegerField(default=0)),
                ('emoji', models.CharField(default=':question:', max_length=500)),
                ('round', models.CharField(default='main', max_length=500)),
                ('testsolve_url', models.CharField(blank=True, max_length=500, null=True)),
                ('points', models.PositiveSmallIntegerField(default=1)),
                ('metas', models.ManyToManyField(blank=True, limit_choices_to={'is_meta': True}, to='puzzles.Puzzle')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StoryCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True)),
                ('slug', models.SlugField(max_length=500, unique=True)),
                ('deep', models.IntegerField(default=0)),
                ('unlock_order', models.IntegerField(default=0)),
                ('min_main_round_solves', models.IntegerField(default=0)),
                ('image', models.ImageField(blank=True, max_length=300, upload_to=puzzles.models.StoryCard.create_image_filename)),
                ('unlocks_post_solve', models.BooleanField(default=False)),
                ('puzzle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='story_cards', to='puzzles.puzzle')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=100, unique=True)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, max_length=100, populate_from=('team_name',), unique=True)),
                ('profile_pic', models.ImageField(blank=True, max_length=300, upload_to=puzzles.models.Team.user_profile_filename)),
                ('profile_pic_victory', models.ImageField(blank=True, max_length=300, upload_to=puzzles.models.Team.user_profile_victory_filename)),
                ('profile_pic_approved', models.BooleanField(default=False)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('start_offset', models.DurationField(default=datetime.timedelta)),
                ('total_hints_awarded', models.IntegerField(default=0)),
                ('total_free_answers_awarded', models.IntegerField(default=0)),
                ('last_solve_time', models.DateTimeField(blank=True, null=True)),
                ('is_prerelease_testsolver', models.BooleanField(default=False)),
                ('is_hidden', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.team')),
            ],
        ),
        migrations.CreateModel(
            name='PuzzleAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=255)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('puzzle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.puzzle')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.team')),
            ],
        ),
        migrations.CreateModel(
            name='Hint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_request', models.BooleanField(default=True)),
                ('submitted_datetime', models.DateTimeField(auto_now_add=True)),
                ('text_content', models.TextField(blank=True)),
                ('notify_emails', models.TextField(default='none')),
                ('claimed_datetime', models.DateTimeField(blank=True, null=True)),
                ('claimer', models.CharField(blank=True, default='', max_length=255)),
                ('status', models.CharField(choices=[('NR', 'No response'), ('ANS', 'Answered'), ('MOR', 'Request more info'), ('REF', 'Refund'), ('OBS', 'Obsolete'), ('RES', 'Resolved without response')], default='NR', max_length=3)),
                ('email', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='puzzles.email')),
                ('puzzle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.puzzle')),
                ('response', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='request_set', to='puzzles.hint')),
                ('root_ancestor_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='hint_thread_set', to='puzzles.hint')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.team')),
            ],
        ),
        migrations.CreateModel(
            name='Errata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('text', models.TextField()),
                ('puzzle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.puzzle')),
            ],
        ),
        migrations.AddField(
            model_name='email',
            name='team',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='puzzles.team'),
        ),
        migrations.AddField(
            model_name='email',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='puzzles.emailtemplate'),
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fun', puzzles.models.RatingField(adjective='fun', max_rating=6)),
                ('difficulty', puzzles.models.RatingField(adjective='hard', max_rating=6)),
                ('comments', models.TextField(blank=True, verbose_name='Anything else:')),
                ('puzzle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.puzzle')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.team')),
            ],
            options={
                'unique_together': {('team', 'puzzle')},
            },
        ),
        migrations.CreateModel(
            name='StoryCardUnlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unlock_datetime', models.DateTimeField(auto_now_add=True)),
                ('story_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.storycard')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.team')),
            ],
            options={
                'unique_together': {('team', 'story_card')},
            },
        ),
        migrations.CreateModel(
            name='PuzzleUnlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unlock_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('puzzle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.puzzle')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.team')),
            ],
            options={
                'unique_together': {('team', 'puzzle')},
            },
        ),
        migrations.CreateModel(
            name='PuzzleState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.JSONField()),
                ('puzzle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.puzzle')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.team')),
            ],
            options={
                'unique_together': {('team', 'puzzle')},
            },
        ),
        migrations.CreateModel(
            name='PuzzleMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guess', models.CharField(max_length=500)),
                ('response', models.TextField()),
                ('puzzle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.puzzle')),
            ],
            options={
                'unique_together': {('puzzle', 'guess')},
            },
        ),
        migrations.CreateModel(
            name='ExtraGuessGrant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('NR', 'No response'), ('GR', 'Granted')], default='NR', max_length=3)),
                ('extra_guesses', models.IntegerField(default=20)),
                ('puzzle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.puzzle')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.team')),
            ],
            options={
                'unique_together': {('team', 'puzzle')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='email',
            unique_together={('uidvalidity', 'uid')},
        ),
        migrations.CreateModel(
            name='CustomPuzzleSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subpuzzle', models.CharField(blank=True, help_text='The name of the subpuzzle this belongs to, if in a minihunt style puzzle.', max_length=255, null=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('submission', models.CharField(max_length=500)),
                ('submitted_datetime', models.DateTimeField(auto_now_add=True, null=True)),
                ('count', models.PositiveIntegerField(default=1)),
                ('puzzle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.puzzle')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.team')),
            ],
            options={
                'unique_together': {('team', 'puzzle', 'subpuzzle', 'submission')},
            },
        ),
        migrations.CreateModel(
            name='AnswerSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_answer', models.CharField(max_length=500)),
                ('is_correct', models.BooleanField()),
                ('submitted_datetime', models.DateTimeField(auto_now_add=True)),
                ('used_free_answer', models.BooleanField()),
                ('puzzle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.puzzle')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='puzzles.team')),
            ],
            options={
                'unique_together': {('team', 'puzzle', 'submitted_answer')},
            },
        ),
    ]
